<%- include('../header') -%>
<%- include('../sidebar') -%>

<!-- NEED TO FIX -->
<!-- days should change if today is tuesday, the table should start on wed
it should also include the actual date today
also show the WEEK OF _____________ should be dynamic
fix the spacing of everything -->
<!-- tag for css -->
<link rel="stylesheet" href="css/reserve.css">

<div class="notSidebar">

    <div class="greeting">
        <h2 id="usernameid"> Hello, <%= username %> </h2>
    </div>

    <form>
        <label for="dates">Choose a date:</label>
        <select id="dates" name="dates"></select>

        <label for="times">Choose a time:</label>
        <select id="times" name="times"></select>

        

        <div class="seatContainer">
            <input type="hidden" id="01" name="seat1" value="0">
            <img id="seat1" class="seat" src="assets/available.png" alt="Available Seat" onclick="toggleSeatStatus('seat1')">
    
            <input type="hidden" id="02" name="seat2" value="0">
            <img id="seat2" class="seat" src="assets/available.png" alt="Available Seat" onclick="toggleSeatStatus('seat2')">

            
            <input type="hidden" id="03" name="seat2" value="2">
            <img id="seat3" class="seat" src="assets/taken.png" alt="Taken Seat" onclick="toggleSeatStatus('seat3')">
            <!-- Test code -->
            <!-- Add more seats as needed -->
        </div>
        <input type="submit" value="Submit">
    </form>

        <div class ="legend">
            <img src="assets/available.png" alt="Available Seat"> Available
            <img src="assets/selected.png" alt="Selected Seat"> Selected
            <img src="assets/taken.png" alt="Taken Seat"> Taken

        </div>

    <script>
        // Function to generate date options for the next 7 days
        function generateDateOptions() {
            const select = document.getElementById('dates');
            const today = new Date();

            for (let i = 0; i < 8; i++) {
                const date = new Date(today);
                date.setDate(today.getDate() + i);

                const option = document.createElement('option');
                option.value = date.toISOString().split('T')[0];
                option.textContent = date.toDateString();
                select.appendChild(option);
            }
        }

        // Function to generate time options with 30-minute intervals
        function generateTimeOptions() {
            const select = document.getElementById('times');
            const startTime = new Date();
            startTime.setHours(8, 0, 0); // Set start time to 8:00 AM

            const endTime = new Date();
            endTime.setHours(18, 0, 0); // Set end time to 6:00 PM

            const interval = 30 * 60 * 1000; // 30 minutes in milliseconds

            while (startTime < endTime) {
                const option = document.createElement('option');
                option.value = startTime.toTimeString().split(' ')[0];
                option.textContent = startTime.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });
                select.appendChild(option);

                startTime.setTime(startTime.getTime() + interval);
            }
        }

        generateDateOptions();
        generateTimeOptions();

        function toggleSeatStatus(seatId) {
    const seat = document.getElementById(seatId);
    const seatInput = document.getElementById(`${seatId}Input`); // Initialize seatInput
    const availableImage = 'assets/available.png';
    const selectedImage = 'assets/selected.png';
    const takenImage = 'assets/taken.png';

    // Check if the seat is taken
    if (seat.src.includes(takenImage)) {
        // Show a custom information popup
        const reservedBy = getReservedBy(); // Replace this with a function to get reservation information

        const infoPopup = document.createElement('div');
        infoPopup.className = 'info-popup';
        infoPopup.textContent = `Reserved by: ${reservedBy}`;
        document.body.appendChild(infoPopup);

        // Hide the info popup after a delay (e.g., 3 seconds)
        setTimeout(() => {
            infoPopup.remove();
        }, 3000);

        return;
    }

    // If the seat is already selected or taken, do nothing
    if (seat.src.includes(selectedImage) || seatInput.value === '2') {
        return;
    }

    // Deselect all seats first
    const allSeats = document.querySelectorAll('.seat');
    allSeats.forEach((s) => {
        if (!s.src.includes(takenImage)) {
            s.src = availableImage;
            s.classList.remove('selected');
        }
    });

    // Toggle the selected state of the clicked seat
    if (seat.src.includes(availableImage)) {
        seat.src = selectedImage;
        seat.classList.add('selected');
        seatInput.value = '1'; // Set the input value to 1 for selected
    } else {
        seat.src = availableImage;
        seat.classList.remove('selected');
        seatInput.value = '0'; // Set the input value to 0 for available
    }
}

// Replace this function with logic to get reservation information
function getReservedBy() {
    // Example: Fetch reservation information from the server or use stored data
    // Replace this with your actual logic to get the reservation information
    return 'John Doe'; // Example value
}



        document.getElementById('seatForm').addEventListener('submit', function (event) {
        event.preventDefault();

    // You can retrieve the form data using JavaScript FormData API
        const formData = new FormData(this);
        for (const pair of formData.entries()) {
            console.log(pair[0], pair[1]);
        }
});

        // Call the functions to generate date and time opti
        
    </script>
<%- include('../footer') -%>
